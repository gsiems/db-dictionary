package template

import (
	"fmt"

	m "github.com/gsiems/db-dictionary/model"
)

func pageHeader(i int, md *m.MetaData) string {

	b := ""
	ri := ""
	si := ""

	switch i {
	case 1:
		ri = "../"
	case 2:
		ri = "../../"
		si = "../"
	}

	switch i {

	case 1, 2:

		dom := ""
		if len(md.Domains) > 0 {
			dom = fmt.Sprintf(`
        <li><a href="%sdomains.html">Domains</a></li>`, si)
		}

		b = fmt.Sprintf(`<!DOCTYPE html>
<html>
  <head>
    <title>{{.Title}}</title>
    <meta http-equiv="Content-Type" content="utf-8" />
    <link rel="stylesheet" href="%scss/main.css" type="text/css">
  </head>
  <body>
    <div id="NavBar">
      <ul id="navlist">
        <li><a href="%sindex.html">Schemas</a></li>
        <li><a href="%scolumns.html">Columns</a></li>
        <li><a href="%sconstraints.html">Constraints</a></li>%s
        <li><a href="%stables.html">Tables</a></li>
      </ul>
    </div>`, ri, ri, si, si, dom, si)

	default:
		b = `<!DOCTYPE html>
<html>
  <head>
    <title>{{.Title}}</title>
    <meta http-equiv="Content-Type" content="utf-8" />
    <link rel="stylesheet" href="css/main.css" type="text/css">
  </head>
  <body>
    <div id="NavBar">
      <ul id="navlist">
        <li><a href="index.html">Schemas</a></li>
      </ul>
    </div>`

	}
	return b
}

func sectionHeader(s string) string {
	return fmt.Sprintf(`
      <h2>%s</h2>`, s)
}

func pageFooter() string {
	return `
    </div>
    <div id="PageFoot">Generated by <a href="https://github.com/gsiems/db-dictionary">db-dictionary</a></div>
    <br />
  <script>
  var acc = document.getElementsByClassName("accordion");
  var i;

  for (i = 0; i < acc.length; i++) {
    acc[i].addEventListener("click", function() {
      this.classList.toggle("active");
      var panel = this.nextElementSibling;
      if (panel.style.maxHeight) {
        panel.style.maxHeight = null;
      } else {
        panel.style.maxHeight = panel.scrollHeight + "px";
      }
    });
  }
  </script>
  </body>
</html>
`
}

func tpltSchemas() string {
	return `
    <div id="PageHead"><h1>{{.Title}}</h1>
      <table width="100.0%">
        <tr><th>Generated:</th><td>{{.TmspGenerated}}</td><td></td></tr>
        <tr><th>Database Version:</th><td colspan="2">{{.DBMSVersion}}</td></tr>
        <tr><th>Database:</th><td>{{.DBName}}</td><td class="TCcomment">{{.DBComment|safeHTML}}</td></tr>
      </table>
    </div>
    <div id="PageBody">
      <table width="100.0%" id="tablesorter-data" class="tablesorter">
        <thead>
        <tr>
          <th>Schema</th>
          <th>Owner</th>
          <th>Comment</th>
        </tr>
        </thead>
        <tbody>{{range .Schemas}}
          <tr>
            <td class="TC1"><a href="{{.Name}}/tables.html">{{.Name}}</a></td>
            <td class="TC1">{{.Owner}}</td>
            <td class="TCcomment">{{.Comment|safeHTML}}</td>
          </tr>{{end}}
        <tbody>
      </table>
      <br />`
}

func tpltSchemaTables() string {
	return `
    <div id="PageHead"><h1>{{.Title}}</h1>
      <table>
        <tr><th>Generated:</th><td>{{.TmspGenerated}}</td><td></td></tr>
        <tr><th>Database:</th><td>{{.DBName}}</td><td class="TCcomment">{{.DBComment|safeHTML}}</td></tr>
        <tr><th>Schema:</th><td>{{.SchemaName}}</td><td class="TCcomment">{{.SchemaComment|safeHTML}}</td></tr>
      </table>
    </div>
    <div id="PageBody">
      <table width="100.0%" id="tablesorter-data" class="tablesorter">
        <thead>
        <tr>
          <th>Table</th>
          <th>Owner</th>
          <th>Type</th>
          <th>Rows</th>
          <th>Comment</th>
        </tr>
        </thead>
        <tbody>{{range .Tables}}
          <tr>
            <td class="TC1"><a href="tables/{{.Name}}.html">{{.Name}}</a></td>
            <td class="TC1">{{.Owner}}</td>
            <td class="TC1">{{.TableType}}</td>
            <td class="TC1">{{.RowCount}}</td>
            <td class="TCcomment">{{.Comment|safeHTML}}</td>
          </tr>{{end}}
        <tbody>
      </table>
      <br />`
}

func tpltSchemaDomains() string {
	return `
    <div id="PageHead"><h1>{{.Title}}</h1>
      <table>
        <tr><th>Generated:</th><td>{{.TmspGenerated}}</td><td></td></tr>
        <tr><th>Database:</th><td>{{.DBName}}</td><td class="TCcomment">{{.DBComment|safeHTML}}</td></tr>
        <tr><th>Schema:</th><td>{{.SchemaName}}</td><td class="TCcomment">{{.SchemaComment|safeHTML}}</td></tr>
      </table>
    </div>
    <div id="PageBody">
      <table width="100.0%" id="tablesorter-data" class="tablesorter">
        <thead>
        <tr>
          <th>Name</th>
          <th>Data Type</th>
          <th>Default</th>
          <th>Comment</th>
        </tr>
        </thead>
        <tbody>{{range .Domains}}
          <tr>
            <td class="TC1">{{.Name}}</td>
            <td class="TC1">{{.DataType}}</td>
            <td class="TC1">{{.Default}}</td>
            <td class="TCcomment">{{.Comment|safeHTML}}</td>
          </tr>{{end}}
        <tbody>
      </table>
      <br />`
}


func tpltSchemaColumns() string {
	return `
    <div id="PageHead"><h1>{{.Title}}</h1>
      <table>
        <tr><th>Generated:</th><td>{{.TmspGenerated}}</td><td></td></tr>
        <tr><th>Database:</th><td>{{.DBName}}</td><td class="TCcomment">{{.DBComment|safeHTML}}</td></tr>
        <tr><th>Schema:</th><td>{{.SchemaName}}</td><td class="TCcomment">{{.SchemaComment|safeHTML}}</td></tr>
      </table>
    </div>
    <div id="PageBody">
      <table width="100.0%" id="tablesorter-data" class="tablesorter">
        <thead>
        <tr>
          <th>Table</th>
          <th>Column</th>
          <th>Ordinal Position</th>
          <th>Data Type</th>
          <th>Nulls</th>
          <th>Default</th>
          <th>Comment</th>
        </tr>
        </thead>
        <tbody>{{range .Columns}}
          <tr>
            <td class="TC1"><a href="tables/{{.TableName}}.html">{{.TableName}}</a></td>
            <td class="TC1">{{.Name}}</td>
            <td class="TC1">{{.OrdinalPosition}}</td>
            <td class="TC1">{{.DataType}}</td>
            <td class="TC1">{{.IsNullable}}</td>
            <td class="TC1">{{.Default}}</td>
            <td class="TCcomment">{{.Comment|safeHTML}}</td>
          </tr>{{end}}
        <tbody>
      </table>
      <br />`
}

func tpltSchemaConstraintsHeader() string {
	return `
    <div id="PageHead"><h1>{{.Title}}</h1>
      <table>
        <tr><th>Generated:</th><td>{{.TmspGenerated}}</td><td></td></tr>
        <tr><th>Database:</th><td>{{.DBName}}</td><td class="TCcomment">{{.DBComment|safeHTML}}</td></tr>
        <tr><th>Schema:</th><td>{{.SchemaName}}</td><td class="TCcomment">{{.SchemaComment|safeHTML}}</td></tr>
      </table>
    </div>
    <div id="PageBody">`
}

func tpltSchemaCheckConstraints() string {
	return `
      <table width="100.0%" id="tablesorter-data" class="tablesorter">
        <thead>
        <tr>
          <th>Table</th>
          <th>Constraint</th>
          <th>Search Condition</th>
          <th>Status</th>
          <th>Comment</th>
        </tr>
        </thead>
        <tbody>{{range .CheckConstraints}}
          <tr>
            <td class="TC1"><a href="tables/{{.TableName}}.html">{{.TableName}}</a></td>
            <td class="TC1">{{.Name}}</td>
            <td class="TC1">{{.CheckClause}}</td>
            <td class="TC1">{{.Status}}</td>
            <td class="TCcomment">{{.Comment|safeHTML}}</td>
          </tr>{{end}}
        <tbody>
      </table>
      <br />`
}

func tpltSchemaUniqueConstraints() string {
	return `
      <table width="100.0%" id="tablesorter-data" class="tablesorter">
        <thead>
        <tr>
          <th>Table</th>
          <th>Constraint</th>
          <th>Columns</th>
          <th>Status</th>
          <th>Comment</th>
        </tr>
        </thead>
        <tbody>{{range .UniqueConstraints}}
          <tr>
            <td class="TC1"><a href="tables/{{.TableName}}.html">{{.TableName}}</a></td>
            <td class="TC1">{{.Name}}</td>
            <td class="TC1">{{.Columns}}</td>
            <td class="TC1">{{.Status}}</td>
            <td class="TCcomment">{{.Comment|safeHTML}}</td>
          </tr>{{end}}
        <tbody>
      </table>
      <br />`
}

func tpltSchemaFKConstraints() string {
	return `
      <table width="100.0%" id="tablesorter-data" class="tablesorter">
        <thead>
        <tr>
          <th>Table</th>
          <th>Constraint</th>
          <th>Columns</th>
          <th>Is Indexed</th>
          <th>Referenced Table</th>
          <th>Referenced Columns</th>
          <th>On Update</th>
          <th>On Delete</th>
          <th>Comment</th>
        </tr>
        </thead>
        <tbody>{{range .ParentKeys}}
          <tr>
            <td class="TC1"><a href="tables/{{.TableName}}.html">{{.TableName}}</a></td>
            <td class="TC1">{{.Name}}</td>
            <td class="TC1">{{.TableColumns}}</td>
            <td class="TC1">{{.IsIndexed}}</td>
            <td class="TC1">{{.RefSchemaName}}.<a href="../{{.RefSchemaName}}/tables/{{.RefTableName}}.html">{{.RefTableName}}</a>
            <td class="TC1">{{.RefTableColumns}}</td>
            <td class="TC1">{{.UpdateRule}}</td>
            <td class="TC1">{{.DeleteRule}}</td>
            <td class="TCcomment">{{.Comment|safeHTML}}</td>
          </tr>{{end}}
        <tbody>
      </table>
      <br />`
}

func tpltTableHead(tabType string) string {

	switch tabType {
	case "TABLE", "MATERIALIZED VIEW":
		return `
    <div id="PageHead"><h1>{{.Title}}</h1>
      <table>
        <tr><th>Generated:</th><td>{{.TmspGenerated}}</td><td></td></tr>
        <tr><th>Database:</th><td>{{.DBName}}</td><td class="TCcomment">{{.DBComment|safeHTML}}</td></tr>
        <tr><th>Schema:</th><td>{{.SchemaName}}</td><td class="TCcomment">{{.SchemaComment|safeHTML}}</td></tr>
        <tr><th>Table:</th><td>{{.TableName}}</td><td class="TCcomment">{{.TableComment|safeHTML}}</td></tr>
        <tr><th>Table Type:</th><td>{{.TableType}}</td><td></td></tr>
        <tr><th>Row Count:</th><td>{{.RowCount}}</td><td></td></tr>
      </table>
    </div>
    <div id="PageBody">`

	default:
		return `
    <div id="PageHead"><h1>{{.Title}}</h1>
      <table>
        <tr><th>Generated:</th><td>{{.TmspGenerated}}</td><td></td></tr>
        <tr><th>Database:</th><td>{{.DBName}}</td><td class="TCcomment">{{.DBComment|safeHTML}}</td></tr>
        <tr><th>Schema:</th><td>{{.SchemaName}}</td><td class="TCcomment">{{.SchemaComment|safeHTML}}</td></tr>
        <tr><th>Table:</th><td>{{.TableName}}</td><td class="TCcomment">{{.TableComment|safeHTML}}</td></tr>
        <tr><th>Table Type:</th><td>{{.TableType}}</td><td></td></tr>
      </table>
    </div>
    <div id="PageBody">`

	}
}

func tpltTableColumns(tabType string) string {
	switch tabType {
	case "VIEW", "MATERIALIZED VIEW":
		return `
      <table width="100.0%" id="tablesorter-data" class="tablesorter">
        <thead>
        <tr>
          <th>Column</th>
          <th>Ordinal Position</th>
          <th>Data Type</th>
          <th>Comment</th>
        </tr>
        </thead>
        <tbody>{{range .Columns}}
          <tr>
            <td class="TC1">{{.Name}}</td>
            <td class="TC1">{{.OrdinalPosition}}</td>
            <td class="TC1">{{.DataType}}</td>
            <td class="TCcomment">{{.Comment|safeHTML}}</td>
          </tr>{{end}}
        <tbody>
      </table>
      <br />`
	default:
		return `
      <table width="100.0%" id="tablesorter-data" class="tablesorter">
        <thead>
        <tr>
          <th>Column</th>
          <th>Ordinal Position</th>
          <th>Data Type</th>
          <th>Nulls</th>
          <th>Default</th>
          <th>Comment</th>
        </tr>
        </thead>
        <tbody>{{range .Columns}}
          <tr>
            <td class="TC1">{{.Name}}</td>
            <td class="TC1">{{.OrdinalPosition}}</td>
            <td class="TC1">{{.DataType}}</td>
            <td class="TC1">{{.IsNullable}}</td>
            <td class="TC1">{{.Default}}</td>
            <td class="TCcomment">{{.Comment|safeHTML}}</td>
          </tr>{{end}}
        <tbody>
      </table>
      <br />`
	}
}

func tpltTableConstraintsHeader() string {
	return `
      <table width="100.0%" id="tablesorter-data" class="tablesorter">
        <thead>
        <tr>
          <th>Name</th>
          <th>Type</th>
          <th>Columns</th>
          <th>Search Condition</th>
          <th>Status</th>
          <th>Comment</th>
        </tr>
        </thead>
        <tbody>`
}

func tpltTableConstraintsFooter() string {
	return `
        </tbody>
      </table>
      <br />`
}

func tpltTableCheckConstraints() string {
	return `{{range .CheckConstraints}}
          <tr>
            <td class="TC2">{{.Name}}</td>
            <td class="TC2">Check</td>
            <td class="TC2"></td>
            <td class="TC2">{{.CheckClause}}</td>
            <td class="TC2">{{.Status}}</td>
            <td class="TCcomment">{{.Comment|safeHTML}}</td>
          </tr>{{end}}`
}

func tpltTablePrimaryKey() string {
	return `{{range .PrimaryKeys}}
          <tr>
            <td class="TC2">{{.Name}}</td>
            <td class="TC2">Primary Key</td>
            <td class="TC2">{{.Columns}}</td>
            <td class="TC2"></td>
            <td class="TC2"></td>
            <td class="TCcomment">{{.Comment|safeHTML}}</td>
          </tr>{{end}}`
}

func tpltTableUniqueConstraints() string {
	return `{{range .UniqueConstraints}}
          <tr>
            <td class="TC2">{{.Name}}</td>
            <td class="TC2">Unique</td>
            <td class="TC2">{{.Columns}}</td>
            <td class="TC2"></td>
            <td class="TC2"></td>
            <td class="TCcomment">{{.Comment|safeHTML}}</td>
          </tr>{{end}}`
}

func tpltTableIndexes() string {
	return `
      <table width="100.0%" id="tablesorter-data" class="tablesorter">
        <thead>
        <tr>
          <th>Name</th>
          <th>Columns</th>
          <th>Is Unique</th>
          <th>Comment</th>
        </tr>
        </thead>
        <tbody>{{range .Indexes}}
          <tr>
            <td class="TC2">{{.Name}}</td>
            <td class="TC2">{{.IndexColumns}}</td>
            <td class="TC2">{{.IsUnique}}</td>
            <td class="TCcomment">{{.Comment|safeHTML}}</td>
          </tr>{{end}}
        </tbody>
      </table>
      <br />`
}

func tpltTableParentKeys() string {
	return `
      <p><b>Parents (references)</b></p>
      <table width="100.0%" id="tablesorter-data" class="tablesorter">
        <thead>
        <tr>
          <th>Name</th>
          <th>Columns</th>
          <th>Is Indexed</th>
          <th>Referenced Table</th>
          <th>Referenced Columns</th>
          <th>On Update</th>
          <th>On Delete</th>
          <th>Comment</th>
        </tr>
        </thead>
        <tbody>{{range .ParentKeys}}
        <tr>
          <td class="TC2">{{.Name}}</td>
          <td class="TC1">{{.TableColumns}}</td>
          <td class="TC1">{{.IsIndexed}}</td>
          <td class="TC2">{{.RefSchemaName}}.<a href="../../{{.RefSchemaName}}/tables/{{.RefTableName}}.html">{{.RefTableName}}</a></td>
          <td class="TC1">{{.RefTableColumns}}</td>
            <td class="TC1">{{.UpdateRule}}</td>
            <td class="TC1">{{.DeleteRule}}</td>
          <td class="TCcomment">{{.Comment|safeHTML}}</td>
        </tr>{{end}}
        </tbody>
      </table>
      <br />`
}

func tpltTableChildKeys() string {
	return `
      <p><b>Children (referenced by)</b></p>
      <table width="100.0%" id="tablesorter-data" class="tablesorter">
        <thead>
        <tr>
          <th>Name</th>
          <th>Columns</th>
          <th>Referencing Table</th>
          <th>Referencing Columns</th>
          <th>Is Indexed</th>
          <th>On Update</th>
          <th>On Delete</th>
          <th>Comment</th>
        </tr>
        </thead>
        <tbody>{{range .ChildKeys}}
        <tr>
          <td class="TC2">{{.RefConstraintName}}</td>
          <td class="TC1">{{.RefTableColumns}}</td>
          <td class="TC2">{{.SchemaName}}.<a href="../../{{.SchemaName}}/tables/{{.TableName}}.html">{{.TableName}}</a></td>
          <td class="TC1">{{.TableColumns}}</td>
          <td class="TC2">{{.IsIndexed}}</td>
            <td class="TC1">{{.UpdateRule}}</td>
            <td class="TC1">{{.DeleteRule}}</td>
          <td class="TCcomment">{{.Comment|safeHTML}}</td>
        </tr>{{end}}
        </tbody>
      </table>
      <br />`

}

//      <h2>Dependencies</h2>
func tpltTableDependencies() string {
	return `
      <p><b>Parents (this depends on)</b></p>
      <table width="100.0%" id="tablesorter-data" class="tablesorter">
        <thead>
        <tr>
          <th>Object Schema</th>
          <th>Object Name</th>
          <th>Object Type</th>
        </tr>
        </thead>
        <tbody>{{range .Dependencies}}
        <tr>
          <td class="TC2">{{.DepObjectSchema}}</td>
          <td class="TC2">{{ if or ( or (eq .DepObjectType "TABLE" ) (eq .DepObjectType "VIEW")) ( or (eq .DepObjectType "MATERIALIZED VIEW") (eq .DepObjectType "FOREIGN TABLE")) }}<a href="../../{{.DepObjectSchema}}/tables/{{.DepObjectName}}.html">{{.DepObjectName}}</a>{{else}}{{.DepObjectName}}{{end}}</td>
          <td class="TC2">{{.DepObjectType}}</td>
        </tr>{{end}}
        </tbody>
      </table>
      <br />`

}

func tpltTableDependents() string {
	return `
      <p><b>Children (depends on this)</b></p>
      <table width="100.0%" id="tablesorter-data" class="tablesorter">
        <thead>
        <tr>
          <th>Object Schema</th>
          <th>Object Name</th>
          <th>Object Type</th>
        </tr>
        </thead>
        <tbody>{{range .Dependents}}
        <tr>
          <td class="TC2">{{.ObjectSchema}}</td>
          <td class="TC2">{{ if or ( or (eq .ObjectType "TABLE" ) (eq .ObjectType "VIEW")) ( or (eq .ObjectType "MATERIALIZED VIEW") (eq .ObjectType "FOREIGN TABLE")) }}<a href="../../{{.ObjectSchema}}/tables/{{.ObjectName}}.html">{{.ObjectName}}</a>{{else}}{{.ObjectName}}{{end}}</td>
          <td class="TC2">{{.ObjectType}}</td>
        </tr>{{end}}
        </tbody>
      </table>
      <br />`
}

func tpltTableFDW() string {
	return `
      <h2>Foreign Data Wrapper</h2>
      <table width="100.0%" id="tablesorter-data" class="tablesorter">
        <thead>
        <tr>
          <th>Wrapper Name</th>
          <th>Server Name</th>
          <th>Wrapper Options</th>
          <th>Comments</th>
        </tr>
        </thead>
        <tbody>{{range .ForeignWrappers}}
        <tr>
          <td class="TC2">{{.WrapperName}}</td>
          <td class="TC1">{{.ServerName}}</td>
          <td class="TC1">{{.WrapperOptions}}</td>
            <td class="TCcomment">{{.Comment|safeHTML}}</td>
        </tr>{{end}}
        </tbody>
      </table>
      <br />`
}

func tpltTableQuery() string {
	return `
      <pre>
{{.Query}}
      </pre>`
}
